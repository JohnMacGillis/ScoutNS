server {
    server_name scoutns.com www.scoutns.com;

    # Root for static files
    root /var/www/landing;
    
    # Handle the root path
    location = / {
        try_files /index.html =404;
    }

    # Forward app path to the React application
    location /app {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # API placeholder images
    location /api/placeholder/ {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # For any other path, proxy to the React app
    location / {
        try_files $uri $uri/ @app;
    }

    location @app {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/scoutns.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/scoutns.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.scoutns.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = scoutns.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name scoutns.com www.scoutns.com;
    return 404; # managed by Certbot
}
